def my_program():
    import hashlib
    import os

    def hash_file(filename, h): # Функция для считывания хэша файлов
        with open(filename, 'rb') as file:
            chunk = 0
            while chunk != b'':
                chunk = file.read(1024)
                h.update(chunk)
        return h.hexdigest()

    input_file = os.path.realpath(input()) # Указание пути к основному файлу 
    if not os.path.exists(input_file): # Проверка, корректности пути
        print('Incorrect file path, please try again')
    else:
        input_file = open(input_file, 'r', encoding='UTF-8')

    files_dir = os.path.realpath(input()) # Проверка, корректности пути
    if not os.path.exists(files_dir):
        print('Incorrect directory path, please try again')
        
    names = input_file.readlines() # Чтение файла
    for a in names: 
        index = a.split(" ")
        short_path = os.path.join(files_dir, index[0])
        if os.path.exists(short_path): # Проверка есть ли файл из списка в директории
            if index[1] == 'md5': # Уточнение использованного алгоритма хэширования
                if hashlib.md5(rb'index[2]') == hash_file(short_path, hashlib.md5()):
                    print('OK')
                else:
                    print('Fail')
            elif index[1] == 'sha1':
                if hashlib.sha1(rb'index[2]') == hash_file(short_path, hashlib.sha1()):
                    print('OK')
                else:
                    print('Fail')
            elif index[1] == 'sha256':
                if hashlib.sha256(rb'index[2]') == hash_file(short_path, hashlib.sha256()):
                    print('OK')
                else:
                    print('Fail')
        else:
            print('NOT FOUND')
    input_file.close()


my_program()
